version = "dev"
description = "Deriving (patched for the Ocsigen project)"
__LIBDIR__

archive(byte)   = "deriving.cma"
archive(native) = "deriving.cmxa"

archive(byte,pkg_num)   = "deriving_num.cma"
archive(native,pkg_num) = "deriving_num.cmxa"

package "syntax" (
  __SYNTAXDIR__
  exists_if = "pa_deriving.cma"
  description = "Deriving syntax extension"
  version = "[distributed with __NAME__]"
  requires(syntax) = "camlp4,unix"
  requires(syntax, toploop) += "__NAME__"
  archive(syntax, preprocessor) = "pa_deriving.cma"
  archive(syntax, toploop) = "pa_deriving.cma"
  package "base" (
    requires(syntax) = "camlp4"
    archive(syntax, preprocessor) = "pa_deriving_common.cmo pa_deriving.cmo"
    archive(syntax, toploop) = "pa_deriving_common.cmo pa_deriving.cmo"
  )
)

package "syntax_tc" (
  __SYNTAXDIR__
  version = "[distributed with __NAME__]"
  exists_if = "pa_deriving_tc.cma"
  requires(syntax) = "camlp4,unix,__TCNAME__"
  requires(syntax, toploop) += "__NAME__"
  archive(syntax, preprocessor) = "pa_deriving_tc.cma"
  archive(syntax, toploop) = "pa_deriving_tc.cma"
  package "base" (
    version = "[distributed with __NAME__]"
    requires(syntax) = "camlp4"
    archive(syntax, preprocessor) = "pa_deriving_common.cmo pa_deriving_tc.cmo"
    archive(syntax, toploop) = "pa_deriving_common.cmo pa_deriving_tc.cmo"
  )
)

## Deprecated
package "base" (
  description = "(deprecated)"
  version = "[distributed with __NAME__]"
  requires = "__NAME__"
)
